{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","document","removeEventListener","event","setState","key","addEventListener","this","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAcaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,MAFhB,+DAKE,WAAmC,IAAD,OAChCC,SAASC,oBAAoB,SAAS,SAACC,GACrC,EAAKC,SAAS,CAAEJ,WAAYG,EAAME,WAPxC,+BAWE,WAA2B,IAAD,OACxBJ,SAASK,iBAAiB,SAAS,SAACH,GAClC,EAAKC,SAAS,CAAEJ,WAAYG,EAAME,WAbxC,oBAiBE,WACE,IAAQL,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGR,EAAU,mCACqBA,EADrB,KAEP,kCAzBd,GAAyBS,IAAMC,W,MCT/BC,IAASC,OACP,cAAC,EAAD,IACAX,SAASY,eAAe,W","file":"static/js/main.a67de4fd.chunk.js","sourcesContent":["import React from 'react';\n\n// export const App: React.FC = () => (\n//   <div className=\"App\">\n//     <p className=\"App__message\">The last pressed key is [Enter]</p>\n//   </div>\n// );\n\ntype State = {\n  pressedKey: string | null;\n};\n\ntype Props = {};\n\nexport class App extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    pressedKey: null,\n  };\n\n  UNSAFE_componentWillMount(): void {\n    document.removeEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({ pressedKey: event.key });\n    });\n  }\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({ pressedKey: event.key });\n    });\n  }\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {pressedKey\n            ? `The last pressed key is [${pressedKey}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}